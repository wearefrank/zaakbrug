name: Continuous Integration

on:
  pull_request:
    branches:
      - main
      - master

jobs:
  version-next:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      version-next: ${{ steps.reference.outputs.next-reference }}
      version-next-strict: ${{ steps.reference.outputs.next-reference }}
    steps:
      - uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            github.com:443

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #4.2.2

      - name: Next Reference
        id: reference
        uses: wearefrank/ci-cd-templates/next-reference@6d9d6438dd46887a375db769167b29bb54b39d78 #1.4.2

  ci:
    uses: wearefrank/ci-cd-templates/.github/workflows/ci-generic.yml@6d9d6438dd46887a375db769167b29bb54b39d78 #1.4.2
    needs:
      - version-next
    secrets:
      token: ${{ secrets.GITHUB_TOKEN }}
    with:
      version: ${{ needs.version-next.outputs.version-next }}
      docker-image-repo: ${{ vars.DOCKER_IMAGE_REPOSITORY }}
      docker-image-name: ${{ vars.DOCKER_IMAGE_NAME }}
      upload-sarif-to-security: false
      run-frank-till-healthy-enabled: false

  run-larva-scenarios:
    uses: ./.github/workflows/run-larva-scenarios.yml
    needs:
      - version-next
      - ci
    with:
      image-id: ${{ needs.ci.outputs.image-id }}

  soapui-testrunner:
    uses: wearefrank/ci-cd-templates/.github/workflows/soapui-testrunner.yml@6d9d6438dd46887a375db769167b29bb54b39d78 #1.4.2
    strategy:
      matrix:
        postgres-version: [14, 15, 16, 17]
    needs:
      - ci
      - run-larva-scenarios
    secrets:
      token: ${{ secrets.GITHUB_TOKEN }}
    with:
      soapui-project: 'e2e/SoapUI/zaakbrug-e2e-soapui-project.xml'
      image-id: ${{needs.ci.outputs.image-id}}
      image-build-artifact-name: 'build-docker-image'
      image-tarball-file: 'image.tar'
      setup-script: |
        export POSTGRES_VERSION=${{ matrix.postgres-version }}
        docker compose -f docker-compose.zaakbrug.dev.yml -f docker-compose.zaakbrug.postgres.yml -f docker-compose.openzaak.dev.yml up -d
      teardown-script: |
        docker compose -f docker-compose.zaakbrug.dev.yml -f docker-compose.zaakbrug.postgres.yml -f docker-compose.openzaak.dev.yml down -v
