<Module xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../FrankConfig.xsd">
    <Adapter name="AddRolToZgw"
    active="${AddRolToZgw.Active}"
    description="">
    
    <Receiver name="AddRolToZgw">
        <JavaListener name="AddRolToZgw" returnedSessionKeys="Error"/>
    </Receiver>
    
    <Pipeline>
            <Exits>
                <Exit name="EXIT" state="SUCCESS"/>
                <Exit name="EXCEPTION" state="ERROR"/>
            </Exits>

            <XmlIfPipe
                name="CheckForZdsGerelateerde"
                xpathExpression="count(*/*:gerelateerde) gt 0"
                >
                <Forward name="then" path="CreateZgwRol" />
                <Forward name="else" path="EXIT" />
            </XmlIfPipe>

            <XsltPipe
                name="CreateZgwRol"
                getInputFromSessionKey="originalMessage"
                storeResultInSessionKey="RolBody"
                styleSheetName="Common/xsl/ZgwRol.xslt"
                >
                <Param name="ZgwRolTypen" sessionKey="ZgwRolTypen" type="DOMDOC" />
                <Param name="RolMapping" sessionKey="RolMapping" type="DOMDOC" />
                <Forward name="success" path="CheckForZgwBetrokkeneIdentificatie" />
            </XsltPipe>

            <XmlIfPipe
                name="CheckForZgwBetrokkeneIdentificatie"
                xpathExpression="string-length(zgwRol/betrokkeneIdentificatie) gt 0"
                >
                <Forward name="then" path="CheckForZgwRolType" />
                <Forward name="else" path="EmptyResult" />
                <Forward name="exception" path="EXIT" /> <!-- Temporary solution for lack of adres processing -->
            </XmlIfPipe>

            <EchoPipe name="EmptyResult"
                getInputFromFixedValue="&lt;dummy/&gt;">
                <Forward name="success" path="EXIT"/>
            </EchoPipe>

            <XmlIfPipe
                name="CheckForZgwRolType"
                xpathExpression="string-length(zgwRol/roltype)>0"
                >
                <Forward name="then" path="RolBodyApplyValueOverridesFromTranslationProfileSender"/>
                <Forward name="else" path="ResultWithErrorMessage"/>
            </XmlIfPipe>
            
            <SenderPipe
                name="RolBodyApplyValueOverridesFromTranslationProfileSender"
                >
                <IbisLocalSender
                    name="RolBodyApplyValueOverridesFromTranslationProfileLocalSender"
                    javaListener="ApplyTranslationProfileValueOverrides"
                    returnedSessionKeys="Error"
                    >
                </IbisLocalSender>
                <Param name="zaaktype" sessionKey="ZaakType" />
                <Param name="valueOverrideKeyRoot" value="zgw.zaken-api.rollen.zgwRol" />
                <Param name="CurrentContext" sessionKey="originalMessage" type="DOMDOC" />
                <Forward name="success" path="EXIT" />
                <Forward name="exception" path="UncaughtException" />
            </SenderPipe>

            <XsltPipe
                name="ResultWithErrorMessage"
                getInputFromFixedValue="&lt;dummy/&gt;"
                styleSheetName="Common/xsl/BuildError.xsl"
                storeResultInSessionKey="Error">
                <Param name="cause" sessionKey="Error" type="DOMDOC" />
                <Param name="code" value="TechnicalError" /> <!-- codes: TechnicalError, TranslationError, ConfigurationError-->
                <Param name="reason"
                    pattern="No roltype with matching omschrijving is found" />
                <Param name="TypeRolOmschrijving" sessionKey="originalMessage" 
                    xpathExpression="role/typeRolOmschrijving"/>
                <Param name="details"
                    pattern="omschrijving:{TypeRolOmschrijving} cannot be found in the list of roltypes" ignoreUnresolvablePatternElements="true" >
                </Param>
                <Param name="detailsXml" sessionKey="ZgwRolTypen" type="DOMDOC" />
                <Forward name="success" path="EXCEPTION" />
                <Forward name="exception" path="EXCEPTION" />
            </XsltPipe>

            <XsltPipe 
                name="UncaughtException"
                getInputFromFixedValue="&lt;dummy/&gt;"
                styleSheetName="Common/xsl/BuildError.xsl"
                storeResultInSessionKey="Error">
                <Param name="cause" sessionKey="Error" type="DOMDOC" />
                <Param name="code" value="TechnicalError" /> <!-- codes: TechnicalError, TranslationError, ConfigurationError-->
                <Param name="reason" pattern="Uncaught exception" /> 
                <!-- <Param name="details" sessionKey="" /> -->
                <Param name="detailsXml" type="DOMDOC" />
                <Forward name="success" path="EXCEPTION" />
                <Forward name="exception" path="EXCEPTION" />
            </XsltPipe>
        </Pipeline>
    </Adapter>
</Module>