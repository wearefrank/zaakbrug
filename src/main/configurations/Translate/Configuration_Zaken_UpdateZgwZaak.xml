<Module xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../FrankConfig.xsd">
    <Adapter name="Zaken_UpdateZgwZaak"
        active="${Zaken_UpdateZgwZaak.Active}"
        description="">

        <Receiver name="Zaken_UpdateZgwZaak">
            <JavaListener name="Zaken_UpdateZgwZaak" returnedSessionKeys="Error" />
        </Receiver>

        <Pipeline>
            <Exits>
                <Exit name="EXIT" state="SUCCESS"/>
                <Exit name="EXCEPTION" state="ERROR"/>
            </Exits>

            <SenderPipe name="GetAuthorizationHeaderForZakenApi"
                getInputFromFixedValue="&lt;dummy/&gt;">
                <IbisLocalSender
                    name="GetAuthorizationHeaderForZakenApiSender"
                    javaListener="GenerateAuthorizationHeaderForZakenApi"
                    returnedSessionKeys="Error,Authorization">
                </IbisLocalSender>
                <Forward name="success" path="CheckIfThereIsEmptyJsonToPatch" />
                <Forward name="exception" path="EXCEPTION" />
            </SenderPipe>

            <XmlIfPipe 
                name="CheckIfThereIsEmptyJsonToPatch"
                getInputFromFixedValue="&lt;dummy/&gt;"
                xpathExpression="$EmptyHoofdzaakJson or $EmptyRelevanteAndereZakenJson">
                <Param name="EmptyHoofdzaakJson" sessionKey="EmptyHoofdzaakJson"/>
                <Param name="EmptyRelevanteAndereZakenJson" sessionKey="EmptyRelevanteAndereZakenJson"/>
                <Forward name="then" path="StoreIfEmptyJsonExistance"/>
                <Forward name="else" path="UpdateZgwZaak"/>
            </XmlIfPipe>

            <PutInSessionPipe 
                name="StoreIfEmptyJsonExistance">
                <Param name="EmptyJsonExistance" value="true"/>
                <Forward name="success" path="UpdateZgwZaak" />
            </PutInSessionPipe>

            <SenderPipe
                name="UpdateZgwZaak"
                getInputFromSessionKey="originalMessage"
                >
                <Json2XmlInputValidator
                    name="ValidatePatch"
                    schema="Zgw/Zaken/Model/PostZgwZaak.xsd"
                    unlessSessionKey="EmptyJsonExistance"
                    root="ZgwZaak"
                    outputFormat="JSON"
                    throwException="true"
                    />
				<HttpSender
                    name="UpdateZgwZaakSender" 
					methodType="PATCH"
					headersParams="Authorization,Accept-Crs,Content-Crs,Accept"
                    timeout="${zaakbrug.zgw.zaken-api.timeout}"
                    maxExecuteRetries="5"
                    contentType="application/json"
				    >
                    <Param name="url" sessionKey="Url"/>
                    <Param name="Accept-Crs" value="EPSG:4326"/>
                    <Param name="Accept" value="application/json"/>
                    <Param name="Content-Crs"  value="EPSG:4326" />
                    <Param name="Authorization"  sessionKey="Authorization" />
                </HttpSender>
                <Forward name="success" path="EXIT"/>
                <Forward name="exception" path="ErrorJsonToXml" />
			</SenderPipe>
            <JsonPipe name="ErrorJsonToXml">
                <Forward name="success" path="buildErrorMsg" />
            </JsonPipe>
            <XsltPipe name="buildErrorMsg"
                styleSheetName="Common/xsl/ParseNegativeHttpResult.xsl">
                <Param name="senderPipeName" value="UpdateZgwZaak" />
                <Forward name="success" path="EXCEPTION" />
            </XsltPipe>
        </Pipeline>
    </Adapter>
</Module>
